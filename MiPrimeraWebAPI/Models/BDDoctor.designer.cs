#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiPrimeraWebAPI.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Medico")]
	public partial class BDDoctorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertClinica(Clinica instance);
    partial void UpdateClinica(Clinica instance);
    partial void DeleteClinica(Clinica instance);
    partial void InsertConsulta(Consulta instance);
    partial void UpdateConsulta(Consulta instance);
    partial void DeleteConsulta(Consulta instance);
    partial void InsertConsultaMedicamento(ConsultaMedicamento instance);
    partial void UpdateConsultaMedicamento(ConsultaMedicamento instance);
    partial void DeleteConsultaMedicamento(ConsultaMedicamento instance);
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void InsertEspecialidad(Especialidad instance);
    partial void UpdateEspecialidad(Especialidad instance);
    partial void DeleteEspecialidad(Especialidad instance);
    partial void InsertFormaFarmaceutica(FormaFarmaceutica instance);
    partial void UpdateFormaFarmaceutica(FormaFarmaceutica instance);
    partial void DeleteFormaFarmaceutica(FormaFarmaceutica instance);
    partial void InsertMedicamento(Medicamento instance);
    partial void UpdateMedicamento(Medicamento instance);
    partial void DeleteMedicamento(Medicamento instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertSexo(Sexo instance);
    partial void UpdateSexo(Sexo instance);
    partial void DeleteSexo(Sexo instance);
    partial void InsertTipoSangre(TipoSangre instance);
    partial void UpdateTipoSangre(TipoSangre instance);
    partial void DeleteTipoSangre(TipoSangre instance);
    #endregion
		
		public BDDoctorDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MedicoConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BDDoctorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDDoctorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDDoctorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDDoctorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clinica> Clinica
		{
			get
			{
				return this.GetTable<Clinica>();
			}
		}
		
		public System.Data.Linq.Table<Consulta> Consulta
		{
			get
			{
				return this.GetTable<Consulta>();
			}
		}
		
		public System.Data.Linq.Table<ConsultaMedicamento> ConsultaMedicamento
		{
			get
			{
				return this.GetTable<ConsultaMedicamento>();
			}
		}
		
		public System.Data.Linq.Table<Doctor> Doctor
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<Especialidad> Especialidad
		{
			get
			{
				return this.GetTable<Especialidad>();
			}
		}
		
		public System.Data.Linq.Table<FormaFarmaceutica> FormaFarmaceutica
		{
			get
			{
				return this.GetTable<FormaFarmaceutica>();
			}
		}
		
		public System.Data.Linq.Table<Medicamento> Medicamento
		{
			get
			{
				return this.GetTable<Medicamento>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Paciente
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Sexo> Sexo
		{
			get
			{
				return this.GetTable<Sexo>();
			}
		}
		
		public System.Data.Linq.Table<TipoSangre> TipoSangre
		{
			get
			{
				return this.GetTable<TipoSangre>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clinica")]
	public partial class Clinica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDCLINICA;
		
		private string _NOMBRE;
		
		private string _DIRECCION;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<Doctor> _Doctor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDCLINICAChanging(int value);
    partial void OnIIDCLINICAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public Clinica()
		{
			this._Doctor = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctor), new Action<Doctor>(this.detach_Doctor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDCLINICA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDCLINICA
		{
			get
			{
				return this._IIDCLINICA;
			}
			set
			{
				if ((this._IIDCLINICA != value))
				{
					this.OnIIDCLINICAChanging(value);
					this.SendPropertyChanging();
					this._IIDCLINICA = value;
					this.SendPropertyChanged("IIDCLINICA");
					this.OnIIDCLINICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(150)")]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Doctor", Storage="_Doctor", ThisKey="IIDCLINICA", OtherKey="IIDCLINICA")]
		public EntitySet<Doctor> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = this;
		}
		
		private void detach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Clinica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consulta")]
	public partial class Consulta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDCONSULTA;
		
		private System.Nullable<int> _IIDPACIENTE;
		
		private System.Nullable<decimal> _PESO;
		
		private System.Nullable<decimal> _ESTATURA;
		
		private string _EXAMENFISICO;
		
		private string _EXAMENLABORATORIO;
		
		private string _DIAGNOSTICO;
		
		private System.Nullable<System.DateTime> _FECHACITA;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<ConsultaMedicamento> _ConsultaMedicamento;
		
		private EntityRef<Paciente> _Paciente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDCONSULTAChanging(int value);
    partial void OnIIDCONSULTAChanged();
    partial void OnIIDPACIENTEChanging(System.Nullable<int> value);
    partial void OnIIDPACIENTEChanged();
    partial void OnPESOChanging(System.Nullable<decimal> value);
    partial void OnPESOChanged();
    partial void OnESTATURAChanging(System.Nullable<decimal> value);
    partial void OnESTATURAChanged();
    partial void OnEXAMENFISICOChanging(string value);
    partial void OnEXAMENFISICOChanged();
    partial void OnEXAMENLABORATORIOChanging(string value);
    partial void OnEXAMENLABORATORIOChanged();
    partial void OnDIAGNOSTICOChanging(string value);
    partial void OnDIAGNOSTICOChanged();
    partial void OnFECHACITAChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHACITAChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public Consulta()
		{
			this._ConsultaMedicamento = new EntitySet<ConsultaMedicamento>(new Action<ConsultaMedicamento>(this.attach_ConsultaMedicamento), new Action<ConsultaMedicamento>(this.detach_ConsultaMedicamento));
			this._Paciente = default(EntityRef<Paciente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDCONSULTA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDCONSULTA
		{
			get
			{
				return this._IIDCONSULTA;
			}
			set
			{
				if ((this._IIDCONSULTA != value))
				{
					this.OnIIDCONSULTAChanging(value);
					this.SendPropertyChanging();
					this._IIDCONSULTA = value;
					this.SendPropertyChanged("IIDCONSULTA");
					this.OnIIDCONSULTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDPACIENTE", DbType="Int")]
		public System.Nullable<int> IIDPACIENTE
		{
			get
			{
				return this._IIDPACIENTE;
			}
			set
			{
				if ((this._IIDPACIENTE != value))
				{
					if (this._Paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._IIDPACIENTE = value;
					this.SendPropertyChanged("IIDPACIENTE");
					this.OnIIDPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PESO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PESO
		{
			get
			{
				return this._PESO;
			}
			set
			{
				if ((this._PESO != value))
				{
					this.OnPESOChanging(value);
					this.SendPropertyChanging();
					this._PESO = value;
					this.SendPropertyChanged("PESO");
					this.OnPESOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTATURA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ESTATURA
		{
			get
			{
				return this._ESTATURA;
			}
			set
			{
				if ((this._ESTATURA != value))
				{
					this.OnESTATURAChanging(value);
					this.SendPropertyChanging();
					this._ESTATURA = value;
					this.SendPropertyChanged("ESTATURA");
					this.OnESTATURAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXAMENFISICO", DbType="VarChar(200)")]
		public string EXAMENFISICO
		{
			get
			{
				return this._EXAMENFISICO;
			}
			set
			{
				if ((this._EXAMENFISICO != value))
				{
					this.OnEXAMENFISICOChanging(value);
					this.SendPropertyChanging();
					this._EXAMENFISICO = value;
					this.SendPropertyChanged("EXAMENFISICO");
					this.OnEXAMENFISICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXAMENLABORATORIO", DbType="VarChar(200)")]
		public string EXAMENLABORATORIO
		{
			get
			{
				return this._EXAMENLABORATORIO;
			}
			set
			{
				if ((this._EXAMENLABORATORIO != value))
				{
					this.OnEXAMENLABORATORIOChanging(value);
					this.SendPropertyChanging();
					this._EXAMENLABORATORIO = value;
					this.SendPropertyChanged("EXAMENLABORATORIO");
					this.OnEXAMENLABORATORIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIAGNOSTICO", DbType="VarChar(200)")]
		public string DIAGNOSTICO
		{
			get
			{
				return this._DIAGNOSTICO;
			}
			set
			{
				if ((this._DIAGNOSTICO != value))
				{
					this.OnDIAGNOSTICOChanging(value);
					this.SendPropertyChanging();
					this._DIAGNOSTICO = value;
					this.SendPropertyChanged("DIAGNOSTICO");
					this.OnDIAGNOSTICOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHACITA", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHACITA
		{
			get
			{
				return this._FECHACITA;
			}
			set
			{
				if ((this._FECHACITA != value))
				{
					this.OnFECHACITAChanging(value);
					this.SendPropertyChanging();
					this._FECHACITA = value;
					this.SendPropertyChanged("FECHACITA");
					this.OnFECHACITAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consulta_ConsultaMedicamento", Storage="_ConsultaMedicamento", ThisKey="IIDCONSULTA", OtherKey="IIDCONSULTA")]
		public EntitySet<ConsultaMedicamento> ConsultaMedicamento
		{
			get
			{
				return this._ConsultaMedicamento;
			}
			set
			{
				this._ConsultaMedicamento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Consulta", Storage="_Paciente", ThisKey="IIDPACIENTE", OtherKey="IIDPACIENTE", IsForeignKey=true)]
		public Paciente Paciente
		{
			get
			{
				return this._Paciente.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente.Entity;
				if (((previousValue != value) 
							|| (this._Paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente.Entity = null;
						previousValue.Consulta.Remove(this);
					}
					this._Paciente.Entity = value;
					if ((value != null))
					{
						value.Consulta.Add(this);
						this._IIDPACIENTE = value.IIDPACIENTE;
					}
					else
					{
						this._IIDPACIENTE = default(Nullable<int>);
					}
					this.SendPropertyChanged("Paciente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConsultaMedicamento(ConsultaMedicamento entity)
		{
			this.SendPropertyChanging();
			entity.Consulta = this;
		}
		
		private void detach_ConsultaMedicamento(ConsultaMedicamento entity)
		{
			this.SendPropertyChanging();
			entity.Consulta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConsultaMedicamento")]
	public partial class ConsultaMedicamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDCONSULTA;
		
		private int _IIDMEDICAMENTO;
		
		private System.Nullable<int> _CANTIDAD;
		
		private System.Nullable<decimal> _PRECIO;
		
		private System.Nullable<decimal> _TOTAL;
		
		private EntityRef<Consulta> _Consulta;
		
		private EntityRef<Medicamento> _Medicamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDCONSULTAChanging(int value);
    partial void OnIIDCONSULTAChanged();
    partial void OnIIDMEDICAMENTOChanging(int value);
    partial void OnIIDMEDICAMENTOChanged();
    partial void OnCANTIDADChanging(System.Nullable<int> value);
    partial void OnCANTIDADChanged();
    partial void OnPRECIOChanging(System.Nullable<decimal> value);
    partial void OnPRECIOChanged();
    partial void OnTOTALChanging(System.Nullable<decimal> value);
    partial void OnTOTALChanged();
    #endregion
		
		public ConsultaMedicamento()
		{
			this._Consulta = default(EntityRef<Consulta>);
			this._Medicamento = default(EntityRef<Medicamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDCONSULTA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IIDCONSULTA
		{
			get
			{
				return this._IIDCONSULTA;
			}
			set
			{
				if ((this._IIDCONSULTA != value))
				{
					if (this._Consulta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDCONSULTAChanging(value);
					this.SendPropertyChanging();
					this._IIDCONSULTA = value;
					this.SendPropertyChanged("IIDCONSULTA");
					this.OnIIDCONSULTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDMEDICAMENTO", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IIDMEDICAMENTO
		{
			get
			{
				return this._IIDMEDICAMENTO;
			}
			set
			{
				if ((this._IIDMEDICAMENTO != value))
				{
					if (this._Medicamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDMEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._IIDMEDICAMENTO = value;
					this.SendPropertyChanged("IIDMEDICAMENTO");
					this.OnIIDMEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANTIDAD", DbType="Int")]
		public System.Nullable<int> CANTIDAD
		{
			get
			{
				return this._CANTIDAD;
			}
			set
			{
				if ((this._CANTIDAD != value))
				{
					this.OnCANTIDADChanging(value);
					this.SendPropertyChanging();
					this._CANTIDAD = value;
					this.SendPropertyChanged("CANTIDAD");
					this.OnCANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PRECIO
		{
			get
			{
				return this._PRECIO;
			}
			set
			{
				if ((this._PRECIO != value))
				{
					this.OnPRECIOChanging(value);
					this.SendPropertyChanging();
					this._PRECIO = value;
					this.SendPropertyChanged("PRECIO");
					this.OnPRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Consulta_ConsultaMedicamento", Storage="_Consulta", ThisKey="IIDCONSULTA", OtherKey="IIDCONSULTA", IsForeignKey=true)]
		public Consulta Consulta
		{
			get
			{
				return this._Consulta.Entity;
			}
			set
			{
				Consulta previousValue = this._Consulta.Entity;
				if (((previousValue != value) 
							|| (this._Consulta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Consulta.Entity = null;
						previousValue.ConsultaMedicamento.Remove(this);
					}
					this._Consulta.Entity = value;
					if ((value != null))
					{
						value.ConsultaMedicamento.Add(this);
						this._IIDCONSULTA = value.IIDCONSULTA;
					}
					else
					{
						this._IIDCONSULTA = default(int);
					}
					this.SendPropertyChanged("Consulta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicamento_ConsultaMedicamento", Storage="_Medicamento", ThisKey="IIDMEDICAMENTO", OtherKey="IIDMEDICAMENTO", IsForeignKey=true)]
		public Medicamento Medicamento
		{
			get
			{
				return this._Medicamento.Entity;
			}
			set
			{
				Medicamento previousValue = this._Medicamento.Entity;
				if (((previousValue != value) 
							|| (this._Medicamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Medicamento.Entity = null;
						previousValue.ConsultaMedicamento.Remove(this);
					}
					this._Medicamento.Entity = value;
					if ((value != null))
					{
						value.ConsultaMedicamento.Add(this);
						this._IIDMEDICAMENTO = value.IIDMEDICAMENTO;
					}
					else
					{
						this._IIDMEDICAMENTO = default(int);
					}
					this.SendPropertyChanged("Medicamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDDOCTOR;
		
		private string _NOMBRE;
		
		private string _APPATERNO;
		
		private string _APMATERNO;
		
		private System.Nullable<int> _IIDCLINICA;
		
		private System.Nullable<int> _IIDESPECIALIDAD;
		
		private string _EMAIL;
		
		private string _TELEFONOCELULAR;
		
		private System.Nullable<int> _IIDSEXO;
		
		private System.Nullable<decimal> _SUELDO;
		
		private System.Nullable<System.DateTime> _FECHACONTRATO;
		
		private System.Nullable<int> _BHABILITADO;
		
		private string _NOMBREARCHIVO;
		
		private string _ARCHIVO;
		
		private EntityRef<Clinica> _Clinica;
		
		private EntityRef<Especialidad> _Especialidad;
		
		private EntityRef<Sexo> _Sexo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDDOCTORChanging(int value);
    partial void OnIIDDOCTORChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPPATERNOChanging(string value);
    partial void OnAPPATERNOChanged();
    partial void OnAPMATERNOChanging(string value);
    partial void OnAPMATERNOChanged();
    partial void OnIIDCLINICAChanging(System.Nullable<int> value);
    partial void OnIIDCLINICAChanged();
    partial void OnIIDESPECIALIDADChanging(System.Nullable<int> value);
    partial void OnIIDESPECIALIDADChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnTELEFONOCELULARChanging(string value);
    partial void OnTELEFONOCELULARChanged();
    partial void OnIIDSEXOChanging(System.Nullable<int> value);
    partial void OnIIDSEXOChanged();
    partial void OnSUELDOChanging(System.Nullable<decimal> value);
    partial void OnSUELDOChanged();
    partial void OnFECHACONTRATOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHACONTRATOChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    partial void OnNOMBREARCHIVOChanging(string value);
    partial void OnNOMBREARCHIVOChanged();
    partial void OnARCHIVOChanging(string value);
    partial void OnARCHIVOChanged();
    #endregion
		
		public Doctor()
		{
			this._Clinica = default(EntityRef<Clinica>);
			this._Especialidad = default(EntityRef<Especialidad>);
			this._Sexo = default(EntityRef<Sexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDDOCTOR", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDDOCTOR
		{
			get
			{
				return this._IIDDOCTOR;
			}
			set
			{
				if ((this._IIDDOCTOR != value))
				{
					this.OnIIDDOCTORChanging(value);
					this.SendPropertyChanging();
					this._IIDDOCTOR = value;
					this.SendPropertyChanged("IIDDOCTOR");
					this.OnIIDDOCTORChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPATERNO", DbType="VarChar(150)")]
		public string APPATERNO
		{
			get
			{
				return this._APPATERNO;
			}
			set
			{
				if ((this._APPATERNO != value))
				{
					this.OnAPPATERNOChanging(value);
					this.SendPropertyChanging();
					this._APPATERNO = value;
					this.SendPropertyChanged("APPATERNO");
					this.OnAPPATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APMATERNO", DbType="VarChar(150)")]
		public string APMATERNO
		{
			get
			{
				return this._APMATERNO;
			}
			set
			{
				if ((this._APMATERNO != value))
				{
					this.OnAPMATERNOChanging(value);
					this.SendPropertyChanging();
					this._APMATERNO = value;
					this.SendPropertyChanged("APMATERNO");
					this.OnAPMATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDCLINICA", DbType="Int")]
		public System.Nullable<int> IIDCLINICA
		{
			get
			{
				return this._IIDCLINICA;
			}
			set
			{
				if ((this._IIDCLINICA != value))
				{
					if (this._Clinica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDCLINICAChanging(value);
					this.SendPropertyChanging();
					this._IIDCLINICA = value;
					this.SendPropertyChanged("IIDCLINICA");
					this.OnIIDCLINICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDESPECIALIDAD", DbType="Int")]
		public System.Nullable<int> IIDESPECIALIDAD
		{
			get
			{
				return this._IIDESPECIALIDAD;
			}
			set
			{
				if ((this._IIDESPECIALIDAD != value))
				{
					if (this._Especialidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDESPECIALIDADChanging(value);
					this.SendPropertyChanging();
					this._IIDESPECIALIDAD = value;
					this.SendPropertyChanged("IIDESPECIALIDAD");
					this.OnIIDESPECIALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(150)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONOCELULAR", DbType="VarChar(10)")]
		public string TELEFONOCELULAR
		{
			get
			{
				return this._TELEFONOCELULAR;
			}
			set
			{
				if ((this._TELEFONOCELULAR != value))
				{
					this.OnTELEFONOCELULARChanging(value);
					this.SendPropertyChanging();
					this._TELEFONOCELULAR = value;
					this.SendPropertyChanged("TELEFONOCELULAR");
					this.OnTELEFONOCELULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDSEXO", DbType="Int")]
		public System.Nullable<int> IIDSEXO
		{
			get
			{
				return this._IIDSEXO;
			}
			set
			{
				if ((this._IIDSEXO != value))
				{
					if (this._Sexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDSEXOChanging(value);
					this.SendPropertyChanging();
					this._IIDSEXO = value;
					this.SendPropertyChanged("IIDSEXO");
					this.OnIIDSEXOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUELDO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SUELDO
		{
			get
			{
				return this._SUELDO;
			}
			set
			{
				if ((this._SUELDO != value))
				{
					this.OnSUELDOChanging(value);
					this.SendPropertyChanging();
					this._SUELDO = value;
					this.SendPropertyChanged("SUELDO");
					this.OnSUELDOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHACONTRATO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHACONTRATO
		{
			get
			{
				return this._FECHACONTRATO;
			}
			set
			{
				if ((this._FECHACONTRATO != value))
				{
					this.OnFECHACONTRATOChanging(value);
					this.SendPropertyChanging();
					this._FECHACONTRATO = value;
					this.SendPropertyChanged("FECHACONTRATO");
					this.OnFECHACONTRATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBREARCHIVO", DbType="VarChar(100)")]
		public string NOMBREARCHIVO
		{
			get
			{
				return this._NOMBREARCHIVO;
			}
			set
			{
				if ((this._NOMBREARCHIVO != value))
				{
					this.OnNOMBREARCHIVOChanging(value);
					this.SendPropertyChanging();
					this._NOMBREARCHIVO = value;
					this.SendPropertyChanged("NOMBREARCHIVO");
					this.OnNOMBREARCHIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARCHIVO", DbType="VarChar(MAX)")]
		public string ARCHIVO
		{
			get
			{
				return this._ARCHIVO;
			}
			set
			{
				if ((this._ARCHIVO != value))
				{
					this.OnARCHIVOChanging(value);
					this.SendPropertyChanging();
					this._ARCHIVO = value;
					this.SendPropertyChanged("ARCHIVO");
					this.OnARCHIVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clinica_Doctor", Storage="_Clinica", ThisKey="IIDCLINICA", OtherKey="IIDCLINICA", IsForeignKey=true)]
		public Clinica Clinica
		{
			get
			{
				return this._Clinica.Entity;
			}
			set
			{
				Clinica previousValue = this._Clinica.Entity;
				if (((previousValue != value) 
							|| (this._Clinica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clinica.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._Clinica.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._IIDCLINICA = value.IIDCLINICA;
					}
					else
					{
						this._IIDCLINICA = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clinica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidad_Doctor", Storage="_Especialidad", ThisKey="IIDESPECIALIDAD", OtherKey="IIDESPECIALIDAD", IsForeignKey=true)]
		public Especialidad Especialidad
		{
			get
			{
				return this._Especialidad.Entity;
			}
			set
			{
				Especialidad previousValue = this._Especialidad.Entity;
				if (((previousValue != value) 
							|| (this._Especialidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidad.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._Especialidad.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._IIDESPECIALIDAD = value.IIDESPECIALIDAD;
					}
					else
					{
						this._IIDESPECIALIDAD = default(Nullable<int>);
					}
					this.SendPropertyChanged("Especialidad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Doctor", Storage="_Sexo", ThisKey="IIDSEXO", OtherKey="IIDSEXO", IsForeignKey=true)]
		public Sexo Sexo
		{
			get
			{
				return this._Sexo.Entity;
			}
			set
			{
				Sexo previousValue = this._Sexo.Entity;
				if (((previousValue != value) 
							|| (this._Sexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexo.Entity = null;
						previousValue.Doctor.Remove(this);
					}
					this._Sexo.Entity = value;
					if ((value != null))
					{
						value.Doctor.Add(this);
						this._IIDSEXO = value.IIDSEXO;
					}
					else
					{
						this._IIDSEXO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sexo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialidad")]
	public partial class Especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDESPECIALIDAD;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private string _DESCRIPCION;
		
		private EntitySet<Doctor> _Doctor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDESPECIALIDADChanging(int value);
    partial void OnIIDESPECIALIDADChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public Especialidad()
		{
			this._Doctor = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctor), new Action<Doctor>(this.detach_Doctor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDESPECIALIDAD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDESPECIALIDAD
		{
			get
			{
				return this._IIDESPECIALIDAD;
			}
			set
			{
				if ((this._IIDESPECIALIDAD != value))
				{
					this.OnIIDESPECIALIDADChanging(value);
					this.SendPropertyChanging();
					this._IIDESPECIALIDAD = value;
					this.SendPropertyChanged("IIDESPECIALIDAD");
					this.OnIIDESPECIALIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(200)")]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidad_Doctor", Storage="_Doctor", ThisKey="IIDESPECIALIDAD", OtherKey="IIDESPECIALIDAD")]
		public EntitySet<Doctor> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Especialidad = this;
		}
		
		private void detach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Especialidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormaFarmaceutica")]
	public partial class FormaFarmaceutica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDFORMAFARMACEUTICA;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<Medicamento> _Medicamento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDFORMAFARMACEUTICAChanging(int value);
    partial void OnIIDFORMAFARMACEUTICAChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public FormaFarmaceutica()
		{
			this._Medicamento = new EntitySet<Medicamento>(new Action<Medicamento>(this.attach_Medicamento), new Action<Medicamento>(this.detach_Medicamento));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDFORMAFARMACEUTICA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDFORMAFARMACEUTICA
		{
			get
			{
				return this._IIDFORMAFARMACEUTICA;
			}
			set
			{
				if ((this._IIDFORMAFARMACEUTICA != value))
				{
					this.OnIIDFORMAFARMACEUTICAChanging(value);
					this.SendPropertyChanging();
					this._IIDFORMAFARMACEUTICA = value;
					this.SendPropertyChanged("IIDFORMAFARMACEUTICA");
					this.OnIIDFORMAFARMACEUTICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormaFarmaceutica_Medicamento", Storage="_Medicamento", ThisKey="IIDFORMAFARMACEUTICA", OtherKey="IIDFORMAFARMACEUTICA")]
		public EntitySet<Medicamento> Medicamento
		{
			get
			{
				return this._Medicamento;
			}
			set
			{
				this._Medicamento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.FormaFarmaceutica = this;
		}
		
		private void detach_Medicamento(Medicamento entity)
		{
			this.SendPropertyChanging();
			entity.FormaFarmaceutica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medicamento")]
	public partial class Medicamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDMEDICAMENTO;
		
		private string _NOMBRE;
		
		private string _CONCENTRACION;
		
		private System.Nullable<int> _IIDFORMAFARMACEUTICA;
		
		private System.Nullable<decimal> _PRECIO;
		
		private System.Nullable<int> _STOCK;
		
		private string _PRESENTACION;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<ConsultaMedicamento> _ConsultaMedicamento;
		
		private EntityRef<FormaFarmaceutica> _FormaFarmaceutica;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDMEDICAMENTOChanging(int value);
    partial void OnIIDMEDICAMENTOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnCONCENTRACIONChanging(string value);
    partial void OnCONCENTRACIONChanged();
    partial void OnIIDFORMAFARMACEUTICAChanging(System.Nullable<int> value);
    partial void OnIIDFORMAFARMACEUTICAChanged();
    partial void OnPRECIOChanging(System.Nullable<decimal> value);
    partial void OnPRECIOChanged();
    partial void OnSTOCKChanging(System.Nullable<int> value);
    partial void OnSTOCKChanged();
    partial void OnPRESENTACIONChanging(string value);
    partial void OnPRESENTACIONChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public Medicamento()
		{
			this._ConsultaMedicamento = new EntitySet<ConsultaMedicamento>(new Action<ConsultaMedicamento>(this.attach_ConsultaMedicamento), new Action<ConsultaMedicamento>(this.detach_ConsultaMedicamento));
			this._FormaFarmaceutica = default(EntityRef<FormaFarmaceutica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDMEDICAMENTO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDMEDICAMENTO
		{
			get
			{
				return this._IIDMEDICAMENTO;
			}
			set
			{
				if ((this._IIDMEDICAMENTO != value))
				{
					this.OnIIDMEDICAMENTOChanging(value);
					this.SendPropertyChanging();
					this._IIDMEDICAMENTO = value;
					this.SendPropertyChanged("IIDMEDICAMENTO");
					this.OnIIDMEDICAMENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONCENTRACION", DbType="VarChar(100)")]
		public string CONCENTRACION
		{
			get
			{
				return this._CONCENTRACION;
			}
			set
			{
				if ((this._CONCENTRACION != value))
				{
					this.OnCONCENTRACIONChanging(value);
					this.SendPropertyChanging();
					this._CONCENTRACION = value;
					this.SendPropertyChanged("CONCENTRACION");
					this.OnCONCENTRACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDFORMAFARMACEUTICA", DbType="Int")]
		public System.Nullable<int> IIDFORMAFARMACEUTICA
		{
			get
			{
				return this._IIDFORMAFARMACEUTICA;
			}
			set
			{
				if ((this._IIDFORMAFARMACEUTICA != value))
				{
					if (this._FormaFarmaceutica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDFORMAFARMACEUTICAChanging(value);
					this.SendPropertyChanging();
					this._IIDFORMAFARMACEUTICA = value;
					this.SendPropertyChanged("IIDFORMAFARMACEUTICA");
					this.OnIIDFORMAFARMACEUTICAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRECIO", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PRECIO
		{
			get
			{
				return this._PRECIO;
			}
			set
			{
				if ((this._PRECIO != value))
				{
					this.OnPRECIOChanging(value);
					this.SendPropertyChanging();
					this._PRECIO = value;
					this.SendPropertyChanged("PRECIO");
					this.OnPRECIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK", DbType="Int")]
		public System.Nullable<int> STOCK
		{
			get
			{
				return this._STOCK;
			}
			set
			{
				if ((this._STOCK != value))
				{
					this.OnSTOCKChanging(value);
					this.SendPropertyChanging();
					this._STOCK = value;
					this.SendPropertyChanged("STOCK");
					this.OnSTOCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRESENTACION", DbType="VarChar(100)")]
		public string PRESENTACION
		{
			get
			{
				return this._PRESENTACION;
			}
			set
			{
				if ((this._PRESENTACION != value))
				{
					this.OnPRESENTACIONChanging(value);
					this.SendPropertyChanging();
					this._PRESENTACION = value;
					this.SendPropertyChanged("PRESENTACION");
					this.OnPRESENTACIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medicamento_ConsultaMedicamento", Storage="_ConsultaMedicamento", ThisKey="IIDMEDICAMENTO", OtherKey="IIDMEDICAMENTO")]
		public EntitySet<ConsultaMedicamento> ConsultaMedicamento
		{
			get
			{
				return this._ConsultaMedicamento;
			}
			set
			{
				this._ConsultaMedicamento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormaFarmaceutica_Medicamento", Storage="_FormaFarmaceutica", ThisKey="IIDFORMAFARMACEUTICA", OtherKey="IIDFORMAFARMACEUTICA", IsForeignKey=true)]
		public FormaFarmaceutica FormaFarmaceutica
		{
			get
			{
				return this._FormaFarmaceutica.Entity;
			}
			set
			{
				FormaFarmaceutica previousValue = this._FormaFarmaceutica.Entity;
				if (((previousValue != value) 
							|| (this._FormaFarmaceutica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormaFarmaceutica.Entity = null;
						previousValue.Medicamento.Remove(this);
					}
					this._FormaFarmaceutica.Entity = value;
					if ((value != null))
					{
						value.Medicamento.Add(this);
						this._IIDFORMAFARMACEUTICA = value.IIDFORMAFARMACEUTICA;
					}
					else
					{
						this._IIDFORMAFARMACEUTICA = default(Nullable<int>);
					}
					this.SendPropertyChanged("FormaFarmaceutica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConsultaMedicamento(ConsultaMedicamento entity)
		{
			this.SendPropertyChanging();
			entity.Medicamento = this;
		}
		
		private void detach_ConsultaMedicamento(ConsultaMedicamento entity)
		{
			this.SendPropertyChanging();
			entity.Medicamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Paciente")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDPACIENTE;
		
		private string _NOMBRE;
		
		private string _APPATERNO;
		
		private string _APMATERNO;
		
		private string _EMAIL;
		
		private string _DIRECCION;
		
		private string _TELEFONOFIJO;
		
		private string _TELEFONOCELULAR;
		
		private System.Nullable<System.DateTime> _FECHANACIMIENTO;
		
		private System.Nullable<int> _IIDSEXO;
		
		private System.Nullable<int> _IIDTIPOSANGRE;
		
		private string _ALERGIAS;
		
		private string _ENFERMEDADESCRONICAS;
		
		private string _CUADRADOVACUNAS;
		
		private string _ANTECEDENTESQUIRURGICOS;
		
		private System.Nullable<int> _BHABILITADO;
		
		private System.Data.Linq.Binary _foto;
		
		private EntitySet<Consulta> _Consulta;
		
		private EntityRef<Sexo> _Sexo;
		
		private EntityRef<TipoSangre> _TipoSangre;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDPACIENTEChanging(int value);
    partial void OnIIDPACIENTEChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnAPPATERNOChanging(string value);
    partial void OnAPPATERNOChanged();
    partial void OnAPMATERNOChanging(string value);
    partial void OnAPMATERNOChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnDIRECCIONChanging(string value);
    partial void OnDIRECCIONChanged();
    partial void OnTELEFONOFIJOChanging(string value);
    partial void OnTELEFONOFIJOChanged();
    partial void OnTELEFONOCELULARChanging(string value);
    partial void OnTELEFONOCELULARChanged();
    partial void OnFECHANACIMIENTOChanging(System.Nullable<System.DateTime> value);
    partial void OnFECHANACIMIENTOChanged();
    partial void OnIIDSEXOChanging(System.Nullable<int> value);
    partial void OnIIDSEXOChanged();
    partial void OnIIDTIPOSANGREChanging(System.Nullable<int> value);
    partial void OnIIDTIPOSANGREChanged();
    partial void OnALERGIASChanging(string value);
    partial void OnALERGIASChanged();
    partial void OnENFERMEDADESCRONICASChanging(string value);
    partial void OnENFERMEDADESCRONICASChanged();
    partial void OnCUADRADOVACUNASChanging(string value);
    partial void OnCUADRADOVACUNASChanged();
    partial void OnANTECEDENTESQUIRURGICOSChanging(string value);
    partial void OnANTECEDENTESQUIRURGICOSChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    partial void OnfotoChanging(System.Data.Linq.Binary value);
    partial void OnfotoChanged();
    #endregion
		
		public Paciente()
		{
			this._Consulta = new EntitySet<Consulta>(new Action<Consulta>(this.attach_Consulta), new Action<Consulta>(this.detach_Consulta));
			this._Sexo = default(EntityRef<Sexo>);
			this._TipoSangre = default(EntityRef<TipoSangre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDPACIENTE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDPACIENTE
		{
			get
			{
				return this._IIDPACIENTE;
			}
			set
			{
				if ((this._IIDPACIENTE != value))
				{
					this.OnIIDPACIENTEChanging(value);
					this.SendPropertyChanging();
					this._IIDPACIENTE = value;
					this.SendPropertyChanged("IIDPACIENTE");
					this.OnIIDPACIENTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPATERNO", DbType="VarChar(150)")]
		public string APPATERNO
		{
			get
			{
				return this._APPATERNO;
			}
			set
			{
				if ((this._APPATERNO != value))
				{
					this.OnAPPATERNOChanging(value);
					this.SendPropertyChanging();
					this._APPATERNO = value;
					this.SendPropertyChanged("APPATERNO");
					this.OnAPPATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APMATERNO", DbType="VarChar(150)")]
		public string APMATERNO
		{
			get
			{
				return this._APMATERNO;
			}
			set
			{
				if ((this._APMATERNO != value))
				{
					this.OnAPMATERNOChanging(value);
					this.SendPropertyChanging();
					this._APMATERNO = value;
					this.SendPropertyChanged("APMATERNO");
					this.OnAPMATERNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIRECCION", DbType="VarChar(200)")]
		public string DIRECCION
		{
			get
			{
				return this._DIRECCION;
			}
			set
			{
				if ((this._DIRECCION != value))
				{
					this.OnDIRECCIONChanging(value);
					this.SendPropertyChanging();
					this._DIRECCION = value;
					this.SendPropertyChanged("DIRECCION");
					this.OnDIRECCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONOFIJO", DbType="VarChar(10)")]
		public string TELEFONOFIJO
		{
			get
			{
				return this._TELEFONOFIJO;
			}
			set
			{
				if ((this._TELEFONOFIJO != value))
				{
					this.OnTELEFONOFIJOChanging(value);
					this.SendPropertyChanging();
					this._TELEFONOFIJO = value;
					this.SendPropertyChanged("TELEFONOFIJO");
					this.OnTELEFONOFIJOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEFONOCELULAR", DbType="VarChar(10)")]
		public string TELEFONOCELULAR
		{
			get
			{
				return this._TELEFONOCELULAR;
			}
			set
			{
				if ((this._TELEFONOCELULAR != value))
				{
					this.OnTELEFONOCELULARChanging(value);
					this.SendPropertyChanging();
					this._TELEFONOCELULAR = value;
					this.SendPropertyChanged("TELEFONOCELULAR");
					this.OnTELEFONOCELULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHANACIMIENTO", DbType="DateTime")]
		public System.Nullable<System.DateTime> FECHANACIMIENTO
		{
			get
			{
				return this._FECHANACIMIENTO;
			}
			set
			{
				if ((this._FECHANACIMIENTO != value))
				{
					this.OnFECHANACIMIENTOChanging(value);
					this.SendPropertyChanging();
					this._FECHANACIMIENTO = value;
					this.SendPropertyChanged("FECHANACIMIENTO");
					this.OnFECHANACIMIENTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDSEXO", DbType="Int")]
		public System.Nullable<int> IIDSEXO
		{
			get
			{
				return this._IIDSEXO;
			}
			set
			{
				if ((this._IIDSEXO != value))
				{
					if (this._Sexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDSEXOChanging(value);
					this.SendPropertyChanging();
					this._IIDSEXO = value;
					this.SendPropertyChanged("IIDSEXO");
					this.OnIIDSEXOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDTIPOSANGRE", DbType="Int")]
		public System.Nullable<int> IIDTIPOSANGRE
		{
			get
			{
				return this._IIDTIPOSANGRE;
			}
			set
			{
				if ((this._IIDTIPOSANGRE != value))
				{
					if (this._TipoSangre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIIDTIPOSANGREChanging(value);
					this.SendPropertyChanging();
					this._IIDTIPOSANGRE = value;
					this.SendPropertyChanged("IIDTIPOSANGRE");
					this.OnIIDTIPOSANGREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALERGIAS", DbType="VarChar(200)")]
		public string ALERGIAS
		{
			get
			{
				return this._ALERGIAS;
			}
			set
			{
				if ((this._ALERGIAS != value))
				{
					this.OnALERGIASChanging(value);
					this.SendPropertyChanging();
					this._ALERGIAS = value;
					this.SendPropertyChanged("ALERGIAS");
					this.OnALERGIASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENFERMEDADESCRONICAS", DbType="VarChar(200)")]
		public string ENFERMEDADESCRONICAS
		{
			get
			{
				return this._ENFERMEDADESCRONICAS;
			}
			set
			{
				if ((this._ENFERMEDADESCRONICAS != value))
				{
					this.OnENFERMEDADESCRONICASChanging(value);
					this.SendPropertyChanging();
					this._ENFERMEDADESCRONICAS = value;
					this.SendPropertyChanged("ENFERMEDADESCRONICAS");
					this.OnENFERMEDADESCRONICASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUADRADOVACUNAS", DbType="VarChar(200)")]
		public string CUADRADOVACUNAS
		{
			get
			{
				return this._CUADRADOVACUNAS;
			}
			set
			{
				if ((this._CUADRADOVACUNAS != value))
				{
					this.OnCUADRADOVACUNASChanging(value);
					this.SendPropertyChanging();
					this._CUADRADOVACUNAS = value;
					this.SendPropertyChanged("CUADRADOVACUNAS");
					this.OnCUADRADOVACUNASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANTECEDENTESQUIRURGICOS", DbType="VarChar(200)")]
		public string ANTECEDENTESQUIRURGICOS
		{
			get
			{
				return this._ANTECEDENTESQUIRURGICOS;
			}
			set
			{
				if ((this._ANTECEDENTESQUIRURGICOS != value))
				{
					this.OnANTECEDENTESQUIRURGICOSChanging(value);
					this.SendPropertyChanging();
					this._ANTECEDENTESQUIRURGICOS = value;
					this.SendPropertyChanged("ANTECEDENTESQUIRURGICOS");
					this.OnANTECEDENTESQUIRURGICOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Consulta", Storage="_Consulta", ThisKey="IIDPACIENTE", OtherKey="IIDPACIENTE")]
		public EntitySet<Consulta> Consulta
		{
			get
			{
				return this._Consulta;
			}
			set
			{
				this._Consulta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Paciente", Storage="_Sexo", ThisKey="IIDSEXO", OtherKey="IIDSEXO", IsForeignKey=true)]
		public Sexo Sexo
		{
			get
			{
				return this._Sexo.Entity;
			}
			set
			{
				Sexo previousValue = this._Sexo.Entity;
				if (((previousValue != value) 
							|| (this._Sexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sexo.Entity = null;
						previousValue.Paciente.Remove(this);
					}
					this._Sexo.Entity = value;
					if ((value != null))
					{
						value.Paciente.Add(this);
						this._IIDSEXO = value.IIDSEXO;
					}
					else
					{
						this._IIDSEXO = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sexo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoSangre_Paciente", Storage="_TipoSangre", ThisKey="IIDTIPOSANGRE", OtherKey="IIDTIPOSANGRE", IsForeignKey=true)]
		public TipoSangre TipoSangre
		{
			get
			{
				return this._TipoSangre.Entity;
			}
			set
			{
				TipoSangre previousValue = this._TipoSangre.Entity;
				if (((previousValue != value) 
							|| (this._TipoSangre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoSangre.Entity = null;
						previousValue.Paciente.Remove(this);
					}
					this._TipoSangre.Entity = value;
					if ((value != null))
					{
						value.Paciente.Add(this);
						this._IIDTIPOSANGRE = value.IIDTIPOSANGRE;
					}
					else
					{
						this._IIDTIPOSANGRE = default(Nullable<int>);
					}
					this.SendPropertyChanged("TipoSangre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = this;
		}
		
		private void detach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sexo")]
	public partial class Sexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDSEXO;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<Doctor> _Doctor;
		
		private EntitySet<Paciente> _Paciente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDSEXOChanging(int value);
    partial void OnIIDSEXOChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public Sexo()
		{
			this._Doctor = new EntitySet<Doctor>(new Action<Doctor>(this.attach_Doctor), new Action<Doctor>(this.detach_Doctor));
			this._Paciente = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Paciente), new Action<Paciente>(this.detach_Paciente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDSEXO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDSEXO
		{
			get
			{
				return this._IIDSEXO;
			}
			set
			{
				if ((this._IIDSEXO != value))
				{
					this.OnIIDSEXOChanging(value);
					this.SendPropertyChanging();
					this._IIDSEXO = value;
					this.SendPropertyChanged("IIDSEXO");
					this.OnIIDSEXOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(50)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Doctor", Storage="_Doctor", ThisKey="IIDSEXO", OtherKey="IIDSEXO")]
		public EntitySet<Doctor> Doctor
		{
			get
			{
				return this._Doctor;
			}
			set
			{
				this._Doctor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sexo_Paciente", Storage="_Paciente", ThisKey="IIDSEXO", OtherKey="IIDSEXO")]
		public EntitySet<Paciente> Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				this._Paciente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = this;
		}
		
		private void detach_Doctor(Doctor entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = null;
		}
		
		private void attach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = this;
		}
		
		private void detach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.Sexo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoSangre")]
	public partial class TipoSangre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IIDTIPOSANGRE;
		
		private string _NOMBRE;
		
		private System.Nullable<int> _BHABILITADO;
		
		private EntitySet<Paciente> _Paciente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDTIPOSANGREChanging(int value);
    partial void OnIIDTIPOSANGREChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnBHABILITADOChanging(System.Nullable<int> value);
    partial void OnBHABILITADOChanged();
    #endregion
		
		public TipoSangre()
		{
			this._Paciente = new EntitySet<Paciente>(new Action<Paciente>(this.attach_Paciente), new Action<Paciente>(this.detach_Paciente));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIDTIPOSANGRE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IIDTIPOSANGRE
		{
			get
			{
				return this._IIDTIPOSANGRE;
			}
			set
			{
				if ((this._IIDTIPOSANGRE != value))
				{
					this.OnIIDTIPOSANGREChanging(value);
					this.SendPropertyChanging();
					this._IIDTIPOSANGRE = value;
					this.SendPropertyChanged("IIDTIPOSANGRE");
					this.OnIIDTIPOSANGREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(100)")]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BHABILITADO", DbType="Int")]
		public System.Nullable<int> BHABILITADO
		{
			get
			{
				return this._BHABILITADO;
			}
			set
			{
				if ((this._BHABILITADO != value))
				{
					this.OnBHABILITADOChanging(value);
					this.SendPropertyChanging();
					this._BHABILITADO = value;
					this.SendPropertyChanged("BHABILITADO");
					this.OnBHABILITADOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoSangre_Paciente", Storage="_Paciente", ThisKey="IIDTIPOSANGRE", OtherKey="IIDTIPOSANGRE")]
		public EntitySet<Paciente> Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				this._Paciente.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.TipoSangre = this;
		}
		
		private void detach_Paciente(Paciente entity)
		{
			this.SendPropertyChanging();
			entity.TipoSangre = null;
		}
	}
}
#pragma warning restore 1591
